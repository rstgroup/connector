ext {
    supportLibraryVersion = '26.0.0-beta2'
    retrofitVersion = '2.0.2'
    loggingInterceptorVersion = '3.8.1'
    leakCanaryVersion = '1.4-beta2'
    jodaTimeVersion = '2.9.3'
    guavaVersion = '18.0'
    fcmVersion = '11.0.2'
    glideVersion = '3.7.0'
    glideTransformationsVersion = '2.0.1'
    rxJavaVersion = '2.0.6'
    rxAndroidVersion = '2.0.1'
    rxRetrofitAdapterVersion = '1.0.0'
    crashlyticsVersion = '2.5.5@aar'
    junitVersion = '4.12'
    dexmaker = '1.2'
    mockitoCore = '2.0.7-beta'
    requeryVersion = '1.1.2'
    rstAndroidBaseVersion = '1.0.2'
    daggerVersion = '2.11'
    fabMenuVersion = '1.10.1'
    paperParcelVersion = '2.0.1'

    support = [
            design:                     "com.android.support:design:${supportLibraryVersion}",
            recyclerView:               "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            cardView:                   "com.android.support:cardview-v7:${supportLibraryVersion}",
            appCompat:                  "com.android.support:appcompat-v7:${supportLibraryVersion}",
            appCompatV4:                "com.android.support:support-v4:${supportLibraryVersion}",
            appCompatV13:               "com.android.support:support-v13:${supportLibraryVersion}",
            annotation:                 "com.android.support:support-annotations:${supportLibraryVersion}",
            dataBinding:                "com.android.databinding:compiler:$android_plugin_version"
    ]

    squareup = [
            retrofit:                   "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitGson:               "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            loggingInterceptor:         "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}",
            leakCanaryDebug:            "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakCanaryRelease:          "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
            leakCanaryTest:             "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
    ]

    joda = [
            time:                       "joda-time:joda-time:${jodaTimeVersion}"
    ]

    google = [
            guava:                      "com.google.guava:guava:${guavaVersion}",
            fcmCore:                    "com.google.firebase:firebase-core:${fcmVersion}",
            fcmMessaging:               "com.google.firebase:firebase-messaging:${fcmVersion}"
    ]

    glide = [
            glide:                      "com.github.bumptech.glide:glide:${glideVersion}",
            glideTransformations:       "jp.wasabeef:glide-transformations:${glideTransformationsVersion}"
    ]

    rx = [
            java           :            "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            android        :            "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            retrofitAdapter:            "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${rxRetrofitAdapterVersion}"
    ]

    fabric = [
            crashlytics:                "com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}"
    ]

    test = [
            junit:                      "junit:junit:${junitVersion}",
            dexmaker:                    "com.google.dexmaker:dexmaker:${dexmaker}",
            dexmakerMockito:             "com.google.dexmaker:dexmaker-mockito:${dexmaker}",
            mockitoCore:                 "org.mockito:mockito-core:${mockitoCore}",
    ]

    database = [
            requery         :            "io.requery:requery:${requeryVersion}",
            requeryAndroid  :            "io.requery:requery-android:${requeryVersion}",
            requeryProcessor:            "io.requery:requery-processor:${requeryVersion}"
    ]

    kotlinBase = [
            sdk:                         "org.jetbrains.kotlin:kotlin-stdlib-jre7:${kotlin_version}"
    ]

    rst = [
            androidBase:                 "com.rst-it:android-base:${rstAndroidBaseVersion}"
    ]

    dagger = [
            compiler:                    "com.google.dagger:dagger-compiler:${daggerVersion}",
            processor:                   "com.google.dagger:dagger-android-processor:${daggerVersion}",
            di      :                    "com.google.dagger:dagger:${daggerVersion}",
            diSupport :                  "com.google.dagger:dagger-android-support:${daggerVersion}",
    ]

    views = [
            fabMenu:                     "com.getbase:floatingactionbutton:${fabMenuVersion}"
    ]

    paperParcel = [
            library:                     "nz.bradcampbell:paperparcel:${paperParcelVersion}",
            kotlin:                      "nz.bradcampbell:paperparcel-kotlin:${paperParcelVersion}",
            compiler:                    "nz.bradcampbell:paperparcel-compiler:${paperParcelVersion}"
    ]
}